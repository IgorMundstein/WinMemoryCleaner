name: "Update CHANGELOG"

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    if: github.event.release.draft == false && github.event.release.prerelease == false
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_BOT_TOKEN }}
          ref: main

      - name: Generate and validate changelog
        env:
          GH_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
        run: |
          releases_json=$(gh api repos/${{ github.repository }}/releases --paginate)
          n=$(echo "$releases_json" | jq length)
          if [ "$n" -eq 0 ]; then
            echo "ERROR: No releases found. Aborting."
            exit 1
          fi

          changelog=""
          for i in $(seq 0 $((n - 1))); do
            version=$(echo "$releases_json" | jq -r ".[$i].name // .[$i].tag_name")
            body=$(echo "$releases_json" | jq -r ".[$i].body // \"No release notes provided.\"")
            body=$(echo "$body" | \
              sed -E '/!\[[^]]*\]\([^)]+\)/d' | \
              sed -E '/<img[^>]+>/d' | \
              awk '
                /^$/ { blank=1; next }
                /^-/ {
                  if (last_bullet) {
                    print
                  } else {
                    if (!first && !last_blank) print ""
                    print
                  }
                  last_bullet=1
                  last_blank=0
                  first=0
                  next
                }
                {
                  if (!first && !last_blank) print ""
                  print
                  last_bullet=0
                  last_blank=0
                  first=0
                }
                END { }
                BEGIN { first=1; last_blank=1; last_bullet=0 }
              '
            )
            changelog="${changelog}### ${version}\n\n${body}\n\n"
          done

          # Remove multiple consecutive blank lines (safety net)
          changelog="$(echo -e "$changelog" | awk 'BEGIN{blank=0} NF{if(blank)print ""; print; blank=0} !NF{blank=1}')"

          if [ -z "$changelog" ] || [ -z "$(echo "$changelog" | tr -d '[:space:]')" ]; then
            echo "ERROR: Generated CHANGELOG.md is empty or invalid. Aborting."
            exit 1
          fi

          echo -e "$changelog" > CHANGELOG.md

      - name: Commit and push CHANGELOG.md
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "docs: update changelog from release notes" || echo "No changes to commit"
          git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
