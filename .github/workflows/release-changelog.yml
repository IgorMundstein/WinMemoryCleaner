name: "Update CHANGELOG"

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    if: github.event.release.draft == false && github.event.release.prerelease == false
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_BOT_TOKEN }}
          ref: main

      - name: Generate Changelog
        env:
          GH_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
        run: |
          releases_json=$(gh api repos/${{ github.repository }}/releases --paginate)
          filtered_releases=$(echo "$releases_json" | jq '[ .[] | select(.draft==false and .prerelease==false) ]')
          if [ "$(echo "$filtered_releases" | jq 'length')" -eq 0 ]; then
            echo "No suitable releases found to build changelog."
            exit 0
          fi

          tmp_changelog=$(mktemp)
          echo "$filtered_releases" | jq -c '.[]' | while IFS= read -r release; do
            version=$(echo "$release" | jq -r '.name // .tag_name')
            body=$(echo "$release" | jq -r '.body // "No release notes provided."')
            clean_body=$(echo "$body" | \
              sed -E '/^\s*!\[[^]]*\]\([^)]*\)\s*$/d' | \
              sed -E 's/!\[[^]]*\]\([^)]*\)//g' | \
              sed -E 's/<img[^>]*>//g'
            )
            printf "### %s\n\n%s\n\n---\n\n" "$version" "$clean_body" >> "$tmp_changelog"
          done
          awk 'BEGIN { blank=0 } { if ($0 ~ /^$/) { if (!blank) print; blank=1 } else { print; blank=0 } }' "$tmp_changelog" > CHANGELOG.md

      - name: Commit and push CHANGELOG.md
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "docs: update changelog from release notes" || echo "No changes to commit"
          git push origin HEAD:main
