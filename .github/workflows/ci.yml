name: Continuous Integration

on:
  push:
    branches:
      - develop
    paths:
      - 'src/**'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'src/**'
  workflow_dispatch:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    name: Build and Sign (develop/pr only)
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Restore and Build solution
        shell: pwsh
        run: msbuild src\WinMemoryCleaner.sln /t:restore /m /p:Configuration=Release /p:Platform="Any CPU"

      - name: Get App Version
        id: version
        shell: pwsh
        run: |
          $assemblyInfoPath = "src/AssemblyInfo.cs"
          if (-Not (Test-Path $assemblyInfoPath)) {
            $assemblyInfoPath = "src/Properties/AssemblyInfo.cs"
          }
          if (-Not (Test-Path $assemblyInfoPath)) {
            Write-Host "::error::AssemblyInfo.cs not found"
            exit 1
          }
          $assemblyInfo = Get-Content $assemblyInfoPath
          $versionLine = $assemblyInfo | Select-String -Pattern 'AssemblyVersion\("([0-9\.]+)"\)'
          if ($versionLine -match 'AssemblyVersion\("([0-9\.]+)"\)') {
            $appVersion = $matches[1]
            echo "app_version=$appVersion" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
            Write-Host "Detected app version: $appVersion"
          } else {
            Write-Host "::error::Could not find version in $assemblyInfoPath"
            exit 1
          }

      - name: Upload unsigned EXE as artifact
        id: upload-unsigned
        uses: actions/upload-artifact@v4
        with:
          name: winmemorycleaner-${{ steps.version.outputs.app_version }}-unsigned
          path: src\bin\Release\WinMemoryCleaner.exe
          if-no-files-found: error

      - name: Submit to SignPath (Develop CI Signing)
        if: github.repository == 'IgorMundstein/WinMemoryCleaner' && github.ref == 'refs/heads/develop'
        id: signpath
        uses: signpath/github-action-submit-signing-request@v1.1
        with:
          api-token: ${{ secrets.SIGNPATH_API_TOKEN }}
          organization-id: ${{ secrets.SIGNPATH_ORGANIZATION_ID }}
          project-slug: WinMemoryCleaner
          signing-policy-slug: ci-signing
          github-artifact-id: ${{ steps.upload-unsigned.outputs.artifact-id }}
          output-artifact-name: winmemorycleaner-${{ steps.version.outputs.app_version }}-signed
          wait-for-completion: true
          output-artifact-directory: ./signed

      - name: Upload signed build artifact
        if: github.repository == 'IgorMundstein/WinMemoryCleaner' && github.ref == 'refs/heads/develop'
        uses: actions/upload-artifact@v4
        with:
          name: winmemorycleaner-${{ steps.version.outputs.app_version }}-signed
          path: signed/WinMemoryCleaner.exe
          retention-days: 30
