name: Build CSS

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

      - name: Setup Node (no cache yet)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Show environment
        run: |
          echo "Node: $(node -v)"
          echo "npm:  $(npm -v)"

      - name: Prepare npm config
        run: |
          npm cache clean --force
          npm config set registry https://registry.npmjs.org/
          npm config delete always-auth || true
          npm config set fetch-retries 5
          npm config set fetch-retry-maxtimeout 60000

      - name: Ensure lock file
        id: lock
        working-directory: ./docs
        run: |
          if [ ! -f package-lock.json ]; then
            echo "Lock file missing; generating."
            npm install --no-audit --no-fund
            echo "generated=true" >> $GITHUB_OUTPUT
          else
            echo "Lock file present."
            echo "generated=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit generated lock file
        if: steps.lock.outputs.generated == 'true'
        run: |
          git add docs/package-lock.json
          if ! git diff --cached --quiet; then
            git commit -m "chore(docs): add package-lock.json"
            git push
          fi

      - name: Restore npm cache
        if: steps.lock.outputs.generated == 'false' || steps.lock.outputs.generated == 'true'
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('docs/package-lock.json') }}
          restore-keys: |
            npm-

      - name: Clean node_modules after lock generation
        if: steps.lock.outputs.generated == 'true'
        working-directory: ./docs
        run: rm -rf node_modules

      - name: Install (npm ci)
        working-directory: ./docs
        run: |
          set +e
          npm ci --no-audit --no-fund 2>&1 | tee ../ci-output.log
          status=${PIPESTATUS[0]}
          set -e
          if [ $status -ne 0 ]; then
            if grep -qi "`npm ci` can only install packages" ../ci-output.log; then
              echo "::error::package-lock.json out of sync. Regenerate locally and commit."
              exit 1
            else
              echo "::error::npm ci failed."
              exit $status
            fi
          fi

      - name: Build CSS
        working-directory: ./docs
        run: npm run build:css

      - name: Commit built CSS
        run: |
          git add docs/assets/css/style.css
          if ! git diff --cached --quiet; then
            git commit -m "chore(docs): build and commit new stylesheet"
            git push
          fi

      - name: Save npm cache
        if: steps.npm-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('docs/package-lock.json') }}

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
            name: npm-logs
            path: |
              /home/runner/.npm/_logs
              docs/ci-output.log
